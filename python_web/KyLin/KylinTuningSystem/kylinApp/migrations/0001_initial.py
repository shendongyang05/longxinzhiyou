# Generated by Django 4.2.13 on 2024-10-26 05:57

from django.db import migrations, models
#migrations模块包含了用于创建和管理迁移的工具，而models模块包含了定义模型的类和函数。
# 迁移文件是Djiango ORM（对象关系映射）的一部分，它的主要功能是将模型的变更同步到数据库中。
# （它是djiango和数据库之间的桥梁，确保数据库结构与代码中的模型定义保持一致，因为他允许开发者通过修改模型来管理数据库结构，而不是直接操作数据库）
# 迁移文件djiango架构中用于数据库迁移的一部分，他的作用是将模行的定义转换为数据库表结构，从而在数据库中创建或更新相对应的表
# 通过运行迁移命令，djiango会自动在数据库中创建或更新表

class Migration(migrations.Migration):
# 类将包含数据库迁移的操作。
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('os_info', models.CharField(max_length=64)),
                ('os_version', models.CharField(max_length=64)),
                ('os_release', models.CharField(max_length=64)),
                ('cpu_model', models.CharField(max_length=64)),
                ('os_processor_name', models.CharField(max_length=64)),
                ('os_processor_architecture', models.CharField(max_length=64)),
                ('os_name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'otherInfo',
            },
        ),
        migrations.CreateModel(
            name='CPUPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('ipaddress', models.CharField(max_length=64)),
                ('userTime', models.CharField(max_length=64)),
                ('SystemTime', models.CharField(max_length=64)),
                ('waitIO', models.CharField(max_length=64)),
                ('Idle', models.CharField(max_length=64)),
                ('count', models.IntegerField(default=0)),
                ('percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('currentTime', models.DateTimeField()),
            ],
            options={
                'db_table': 'cpuInfo',
            },
        ),
        migrations.CreateModel(
            name='DataBaseInformationManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=32, verbose_name='ip地址')),
                ('port', models.IntegerField(verbose_name='端口')),
                ('database', models.CharField(max_length=32, verbose_name='数据库')),
                ('type', models.CharField(max_length=32, verbose_name='类型')),
                ('user', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('code', models.CharField(max_length=32, verbose_name='编码')),
            ],
            options={
                'db_table': 'DbServeInfo',
            },
        ),
        migrations.CreateModel(
            name='DiskPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('ipaddress', models.CharField(max_length=64)),
                ('total', models.CharField(default='', max_length=64)),
                ('used', models.CharField(default='', max_length=64)),
                ('free', models.CharField(default='', max_length=64)),
                ('percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('readCount', models.CharField(max_length=64)),
                ('writeCount', models.CharField(max_length=64)),
                ('readBytes', models.CharField(max_length=64)),
                ('writeBytes', models.CharField(max_length=64)),
                ('readTime', models.CharField(max_length=64)),
                ('writeTime', models.CharField(max_length=64)),
                ('currentTime', models.DateTimeField()),
            ],
            options={
                'db_table': 'DfInfo',
            },
        ),
        migrations.CreateModel(
            name='MemoryPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('ipaddress', models.CharField(max_length=64)),
                ('total', models.CharField(max_length=64)),
                ('used', models.CharField(max_length=64)),
                ('free', models.CharField(max_length=64)),
                ('buffers', models.CharField(max_length=64)),
                ('cache', models.CharField(max_length=64)),
                ('swap', models.CharField(max_length=64)),
                ('percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('currentTime', models.DateTimeField()),
            ],
            options={
                'db_table': 'memoryInfo',
            },
        ),
        migrations.CreateModel(
            name='MonitoringServerInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=32, verbose_name='ip地址')),
                ('port', models.IntegerField(verbose_name='端口')),
                ('remarks', models.CharField(max_length=128, verbose_name='备注')),
            ],
            options={
                'db_table': 'serveInfo',
            },
        ),
        migrations.CreateModel(
            name='NetworkPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('ipaddress', models.CharField(max_length=64)),
                ('sent', models.CharField(default='', max_length=64)),
                ('recv', models.CharField(default='', max_length=64)),
                ('packetSent', models.CharField(max_length=64)),
                ('packetRecv', models.CharField(max_length=64)),
                ('currentTime', models.DateTimeField()),
            ],
            options={
                'db_table': 'networkInfo',
            },
        ),
        migrations.CreateModel(
            name='ServerManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=32, verbose_name='ip地址')),
                ('port', models.IntegerField(verbose_name='端口')),
                ('server_category', models.CharField(max_length=32, verbose_name='服务类型')),
                ('remarks', models.CharField(max_length=128, verbose_name='备注')),
            ],
            options={
                'db_table': 'fuwuxingxiguanli',
            },
        ),
        migrations.CreateModel(
            name='UserModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, verbose_name='用户名')),
                ('password', models.CharField(max_length=50, verbose_name='密码')),
            ],
            options={
                'db_table': 'users',
            },
        ),
    ]
